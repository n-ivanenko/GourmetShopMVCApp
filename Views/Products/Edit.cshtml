@model Product

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <input type="hidden" asp-for="Id" />

            <div class="form-group">
                <label asp-for="ProductName" class="control-label"></label>
                <input asp-for="ProductName" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="SupplierId" class="control-label">Supplier</label>
                <select asp-for="SupplierId" class="form-control" asp-items="@(ViewData["Suppliers"] as SelectList)">
                    <option value="">Select a Supplier</option>
                </select>
                <span asp-validation-for="SupplierId" class="text-danger"></span>
            </div>


            <div class="form-group">
                <label asp-for="UnitPrice" class="control-label"></label>
                <input asp-for="UnitPrice" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="Package" class="control-label"></label>
                <input asp-for="Package" class="form-control" />
            </div>

            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsDiscontinued" /> @Html.DisplayNameFor(model => model.IsDiscontinued)
                </label>
            </div>

            <div class="form-group">
                <input type="submit" value="Save Changes" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
